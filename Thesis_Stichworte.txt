Abgrenzung der Begrifflichkeiten in Kotlin Multiplatform. (KMP, KMM, CMP)
- In der Thesis wird KMP mit nativer UI betrachtet.

- Riegers Katalog nur zum Evaluieren von cross-platform app developments frameworks
- heutzutage bieten frameworks neben cross-platform app development auch web (und desktop) an
- wie lässt sich der katalog erweitern, um auch die web fähigkeiten des frameworks zu evaluieren? (expert interviews & literature review)
- braucht es mit KMP ein neues Kriterium "Degree of Code-Sharing" oder "Flexibility"?

2. Wie gut schneidet KMP in dem neuen Katalog ab? (Fragebogen)
- Hier sehr wichtiger Punkt: wenn Koltin Multiplatform mit nativer UI genutzt wird, dann schneidet KMP extrem gut ab.
Hat aber den drawback, dass mehr Code geschrieben werden muss!

3. Diskussion
- Evaluation Framework könnte noch für Desktop erweitert werden

Potenzielle Erweiterungskategorien: 
- Browser Compatability
- Search Enginge Optimization
- Mobile Web Experience
- Offline Capabilities
- Web Performance Optimizations: The framework's ability to leverage web-specific performance enhancements, 
such as lazy loading, caching, and others.
- Accessibility
- 



Interviews um Katalog zu entwickeln: 
- Rieger u. Majchrzak
- David Herman (Kobweb)
- Colja?



Gliederung:

1. Introduction and Motivation

2. Basics

2.1 Cross-Platform Development
Definition and significance of cross-platform development
2.1.1 Types of Cross-Platform Applications
Hybrid-Apps
Progressive Web Apps (PWAs)
Compiled to Native Apps
Multiplatform Native Apps
Server-Driven-UI?
2.1.2 Common Challenges in Cross-Platform Development


2.2 Kotlin Multiplatform
- definition, explanation and the aim of KMP.
- how does code sharing work
- difference to other cross-platform approaches
2.2.1 


3. Related Work
- a lot of scientific literature on framework evaluations for specific aspects (file system access, performance,...)
- a lot of literature on framework comparisons, but without a unified way of comparison
3.1 Rieger and Majchrzak
- comprehensive, exhaustive and well defined criteria catalogue for cross-platform app development frameworks
- catalogue works for "app-enabled" devices
- modern frameworks allow for building applications for mobile, desktop and web at once
- kotlin multiplatform offers cross-platform in a new and unique way => need to revise some of the criteria
- need for catalogue that can evaluate frameworks on their web capabilities as well
3.2 criteria to evaluate web development frameworks

4. Revised set of criteria to evaluate modern cross-platform frameworks with web development capabilities
- explain which criteria need to be updated
- which criteria need to be added based on literature from 3.2 and expert interviews
- present the revised criteria catalogue

5. Evaluation of Kotlin Multiplatform for Cross-Platform Development of Mobile/Android and Web Applications
Survey of how developers would evaluate Kotlin Multiplatform with the revised criteria catalogue
- Analyze Survey
- present findings

6. Discussion 
- How suitable is the revised catalogue to evaluate modern cross-platform frameworks?
- Would the evaluation of other frameworks like flutter, react native or xamarin work likewise?
- Need for more/revised criteria to evaluate desktop as well?
- discuss survey findings

