% This file was created with Citavi 6.14.4.0

@proceedings{.2013,
 year = {2013},
 publisher = {{Springer, Berlin, Heidelberg}},
 file = {Web Information Systems and Technologies:Attachments/Web Information Systems and Technologies.pdf:application/pdf}
}


@inproceedings{Heitkotter.2013,
 abstract = {The fragmented smartphone market with at least five important mobile platforms makes native development of mobile applications (apps) a challenging and costly endeavour. Cross-platform development might alleviate this situation. Several cross-platform approaches have...},
 author = {Heitk{\"o}tter, Henning and Hanschke, Sebastian and Majchrzak, Tim A.},
 title = {Evaluating Cross-Platform Development Approaches for Mobile Applications},
 url = {https://link.springer.com/chapter/10.1007/978-3-642-36608-6_8    },
 pages = {120--138},
 volume = {140},
 publisher = {{Springer, Berlin, Heidelberg}},
 year = {2013},
 doi = {10.1007/978-3-642-36608-6    {\textunderscore }8}
}


@inproceedings{Heitkotter.2014,
 abstract = {When developing mobile applications for more than one platform, developers often use cross-platform development approaches based on Web technologies such as mobile Web apps instead of native development. While the single, platform-independent source code reduces...},
 author = {Heitk{\"o}tter, Henning and Majchrzak, Tim A. and Ruland, Benjamin and Weber, Till},
 title = {Comparison of Mobile Web Frameworks},
 url = {https://link.springer.com/chapter/10.1007/978-3-662-44300-2_8#Tab1    },
 pages = {119--137},
 volume = {189},
 publisher = {{Springer, Berlin, Heidelberg}},
 year = {2014},
 doi = {10.1007/978-3-662-44300-2     {\textunderscore }8}
}


@inproceedings{HenningHeitkotter.2013,
 abstract = {Digital Library},
 author = {{Henning Heitk{\"o}tter} and {Tim A. Majchrzak} and {Benjamin Ruland} and {Till Weber}},
 title = {Evaluating Frameworks for Creating Mobile Web Apps},
 url = {https://www.scitepress.org/Link.aspx?doi=10.5220/0004356702090221},
 urldate = {4/20/2015},
 pages = {209--221},
 publisher = {SciTePress},
 isbn = {978-989-8565-54-9     },
 editor = {Krempels, Karl-Heinz},
 booktitle = {Proceedings of the 9th International Conference on Web Information Systems and Technologies},
 year = {2013},
 address = {S.l.}
}


@article{Vyshnavi.2019,
 abstract = {Web is the most frequently and rapidly used networking aid which satisfies the requirements of all type of users and which provides a solution for any type of problem. For designing and developing such well defined and well structured, we have to},
 author = {Vangala Rama Vyshnavi, Amit and Malik, Amit},
 year = {2019}
 title = {Efficient Way of Web Development Using Python and Flask},
 url = {https://www.academia.edu/41538217/Efficient_Way_of_Web_Development_Using_Python_and_Flask}
}


@misc{Irene.2022,
 abstract = {Do you have any doubts regarding which tech stack to use in 2023? Learn more about the differences of Flutter vs. Kotlin in our comparison.},
 author = {Irene},
 year = {2022},
 title = {Kotlin vs Flutter 2023: Which One is Better?},
 url = {https://fireart.studio/blog/what-about-flutter-vs-kotlin/},
 urldate = {3/6/2023}
}


@article{ISITAN.2020,
 abstract = {In order to develop a mobile application, it is necessary to develop software separately for each operating system to be outputted. In response to this problem, frameworks that can give application outputs for more than one operating system by developing applications on only one platform have been developed. With the recent diversification of these systems, which are called cross platform mobile application development tools, which one should be preferred has become a problem for developers. In this study, the cross-platform mobile application development tools that have come to the fore in recent years will be determined and evaluated separately based on the pros and cons of distinguishing parameters. With the help of the applications to be developed, values such as processor, memory, battery and network usage, rendering time, opening time, installation file size, application size will be measured. It is also aimed to help developers find out which framework is more suitable for their needs by comparing them on topics such as popularity, third party software support, operating systems that can be outputted, development languages and ease of use, speed - performance. In the study, it was observed that Flutter and React Native gave more successful results.},
 author = {I{\c{S}}ITAN, Mehmet and KOKLU, Murat},
 year = {2020},
 title = {Comparison and Evaluation of Cross Platform Mobile Application Development Tools},
 url = {https://dergipark.org.tr/en/pub/ijamec/issue/57538/832673},
 keywords = {Cross Platform;mobile development;Mobile Frameworks},
 pages = {273--281},
 volume = {8},
 number = {4},
 issn = {2147-8228},
 journal = {International Journal of Applied Mathematics Electronics and Computers},
 doi = {10.18100/ijamec.832673 },
 file = {Comparison and Evaluation of Cross Platform Mobile Appli:Attachments/Comparison and Evaluation of Cross Platform Mobile Appli.pdf:application/pdf}
}


@article{J.Christoph.2019,
 abstract = {--- Cross-platform development is increasingly driven by web frameworks. Modern frameworks typically support application deployment for different platforms as well as the creation of progressive web apps. This approach is also driven by the increasing number of different device types and platforms. Development efforts can be significantly reduced by utilization of modern frameworks. Hence, several modern frameworks that have proven to be suitable for cross-platform development will be compared in this article. This article will extend our previous research on cross-platform development by several dimensions: at first, research on literature and technology developments regarding cross-platform development is extended. Secondly, we added further frameworks into our analysis. Thirdly, the evaluation approach is systematically extended to discuss each framework on an individual basis. This is driven by a reference architecture and implementation. To create a sound and objective framework comparison, the reference architecture is utilized to implement applications by means of each framework. Subse-quently tests for different mobile devices and platforms are defined. All frameworks are compared according several key met-rics. Finally, we describe current strengths and weaknesses of all approaches before giving an outlook on future steps of research.},
 author = {{J. Christoph} and {Daniel R{\"o}sch} and {T. Schuster} and {L. Waidelich}},
 year = {2019},
 title = {Current Progress in Cross-Platform Application Development Evaluation of Frameworks for Mobile Application Development},
 url = {https://www.semanticscholar.org/paper/Current-Progress-in-Cross-Platform-Application-of-Christoph-R%C3%B6sch/1ee4322f36f1bd1b1707f799147a4d58192470cb}
}


@article{Khalifa.2020,
 abstract = {There are so many development frameworks in the market and we often get lost about how to choose the right one. There are three main dimensions to consider when evaluating any framework: These three$\ldots$},
 author = {Khalifa, Zeinab},
 year = {2020},
 title = {How to choose your development framework and libraries?},
 url = {https://blog.devgenius.io/how-to-choose-your-development-framework-and-libraries-d36230960342},
 urldate = {6/26/2023},
 journal = {Dev Genius},
 file = {How to choose your development framework and libraries:Attachments/How to choose your development framework and libraries.pdf:application/pdf}
}


@article{KhaoulaBenmoussa.2019,
 abstract = {A new model for the selection of web development frameworks: application to PHP frameworks},
 author = {{Khaoula Benmoussa} and {Majida Laaziri} and {Samira Khoulji} and {Kerkeb Mohamed Larbi} and {Abir El Yamami}},
 year = {2019},
 title = {A new model for the selection of web development frameworks: application to PHP frameworks},
 url = {https://ijece.iaescore.com/index.php/IJECE/article/view/11586/11102},
 keywords = {codeIgniter;laravel;PHP frameworks;PHP frameworks evaluation;symphony;zend},
 pages = {695--703},
 volume = {9},
 number = {1},
 issn = {2722-2578},
 journal = {International Journal of Electrical and Computer Engineering (IJECE)},
 file = {A new model for the selection of web development framewo:Attachments/A new model for the selection of web development framewo.pdf:application/pdf}
}


@proceedings{Krempels.2013,
 year = {2013},
 title = {Proceedings of the 9th International Conference on Web Information Systems and Technologies: Aachen, Germany, 8 - 10 May 2013},
 address = {S.l.},
 publisher = {SciTePress},
 isbn = {978-989-8565-54-9        },
 editor = {Krempels, Karl-Heinz},
 institution = {{Institute for Systems and Technologies of Information, Control and Communication}}
}


@article{Lachgar.2022,
 abstract = {Because of the growing popularity of smartphones and tablets, the use of mobile applications has exploded recently. However, the variety of mobile platforms compels developers to create an app for each, making the process more complex and expensive. Thus, open-source cross-platform mobile frameworks...},
 author = {Lachgar, Mohamed and Hanine, Mohamed and Benouda, Hanane and Ommane, Younes},
 year = {2022},
 title = {Decision Framework for Cross-Platform Mobile Development Frameworks Using an Integrated Multi-Criteria Decision-Making Methodology},
 url = {https://www.igi-global.com/gateway/article/297928},
 keywords = {2022},
 pages = {1--22},
 volume = {13},
 number = {1},
 issn = {1937-9412},
 journal = {International Journal of Mobile Computing and Multimedia Communications},
 doi = {10.4018/IJMCMC.297928 },
 file = {Decision Framework for Cross-Platform Mobile Development:Attachments/Decision Framework for Cross-Platform Mobile Development.pdf:application/pdf}
}


@proceedings{Lazar.10172021,
 year = {10172021},
 title = {The 23rd International ACM SIGACCESS Conference on Computers and Accessibility},
 address = {New York, NY, USA},
 publisher = {ACM},
 isbn = {9781450383066      },
 editor = {Lazar, Jonathan and Feng, Jinjuan Heidi and Hwang, Faustina},
 doi = {10.1145/3441852     }
}


@book{Levlin.2020,
 abstract = {One of the most used tools for creating interactive, advanced, and easily maintainable websites in 2020 is the programming language JavaScript. Over the last decade, many front-end frameworks have been built on top of JavaScript, which makes creation, design, and maintenance of interactive websites easier. As of 2020, the most popular front-end JavaScript frameworks were, by a large margin, React and Vue, followed by Angular. A relatively new framework called Svelte was also gaining in popularity and raised developer interest. This study will evaluate the performance of these front-end JavaScript frameworks. The criteria for evaluation are primarily based on speed of completing certain operations related to DOM elements in the web browser, such as DOM element addition, editing, and removal. Non-technical evaluation points include differences in architecture, development experience, popularity, maturity, and availability.To set the context for the study of these frameworks, the study begins with an outline of the history and development of JavaScript. Its current status and versions are also described. Surrounding technologies relevant to the study are presented, such as DOM and HTML. Following this, the key features of front-end JavaScript frameworks are investigated, and the development setup process for a generic framework is documented. The criteria for selecting frameworks for evaluation is presented, and the four selected front-end frameworks are then investigated and evaluated. A benchmark JavaScript application is described and created for each of the frameworks. With this reference application, a number of technical benchmarks are performed, where the frameworks are rated according to how well they perform various DOM data updates. Finally, a recommendation is made on which frameworks are best suited for use, and how the future landscape of front-end JavaScript frameworks is likely to develop.},
 author = {Levlin, Mattias},
 year = {2020},
 title = {DOM benchmark comparison of the front-end JavaScript frameworks React, Angular, Vue, and Svelte},
 url = {https://www.doria.fi/handle/10024/177433},
 keywords = {113 Data- och informationsvetenskap;Avhandling pro gradu;document object model;front-end framework;javascript;web development},
 publisher = {{{\AA}bo Akademi}},
 file = {DOM benchmark comparison of the front-end JavaScript fra:Attachments/DOM benchmark comparison of the front-end JavaScript fra.pdf:application/pdf}
}


@inproceedings{Longley.2021,
 author = {Longley, Michael and Elglaly, Yasmine N.},
 title = {Accessibility Support in Web Frameworks},
 year = {2021}
 pages = {1--4},
 publisher = {ACM},
 isbn = {9781450383066    },
 editor = {Lazar, Jonathan and Feng, Jinjuan Heidi and Hwang, Faustina},
 booktitle = {The 23rd International ACM SIGACCESS Conference on Computers and Accessibility},
 year = {10172021},
 address = {New York, NY, USA},
 doi = {10.1145/3441852.3476531    }
}


@inproceedings{Lucas.2020,
 abstract = {This demo paper describes a simple and practical approach to writing cross-platform casual games using the Kotlin programming language. A key aim is to make it much easier for researchers to demonstrate their AI playing a range of games. Pure Kotlin code (which excludes using any Java graphics libraries) can be transpiled to JavaScript and run in a web browser. However, writing Kotlin code that will run without modification both in a web browser and on the JVM is not trivial; it requires strict adherence to an appropriate methodology. The contribution of this paper is to provide such a method including a software design and to demonstrate this working for Tetris, played either by AI or human.},
 author = {Lucas, Simon M.},
 title = {Cross-Platform Games in Kotlin},
 keywords = {Artificial intelligence;Browsers;Color;Games;Java;Libraries;Writing},
 pages = {774--775},
 isbn = {2325-4289},
 booktitle = {2020 IEEE Conference on Games (CoG)},
 year = {2020},
 doi = {10.1109/CoG47356.2020.9231914}
}


@article{M.Kaluza.2019,
 abstract = {It is shown that the Django framework, because it is suitable for development of larger applications, suitable for beginner developers, and achieves the highest overall rating of additional comparison criteria, is the best choice of analyzed back-end frameworks for web application development. Web applications have a complex structure, and for more efficient and faster writing of original program code, frameworks are often used. There are numerous different frameworks on the market that are used to build different parts of software architecture. Only back-end frameworksfor web applications development are analyzed. Previous research on evaluation criteria for back-end frameworks, and various sources which by various reasons, represent the list of popularity of back-end frameworks are shown. The framework selection procedure is described, and the reasons of framework selection (Laravel, Rails, Django and Spring) for the analysis are given. The examination (verification) and evaluation of the degree of satisfaction of the selected basic and additional comparison criteria in selected frameworks are carried out. The analysis shows insignificant differences in the overall ratings of analyzed frameworks according to the basic comparison criteria. According to the additional comparison criteria, the analysis shows significant differences in the overall ratings of analyzed frameworks. It is shown that the Django framework, because it is suitable for development of larger applications, suitable for beginner developers, and achieves the highest overall rating of additional comparison criteria, is the best choice of analyzed back-end frameworks for web application development.},
 author = {Kaluža, M. and Kalanj, Marijana and Vukelić, B.},
 year = {2019},
 title = {A comparison of back-endframeworks for web application development},
 url = {https://www.semanticscholar.org/paper/A-comparison-of-back-end-frameworks-for-web-Kalu%C5%BEa-Kalanj/0ccd899defa3ff2a09bb0bc315828f33a7a20a8a?citedSort=relevance},
 journal = {Zbornik Veleu{\v{c}}ili{\v{s}}ta u Rijeci},
 file = {A comparison of back-endframeworks for web application d:Attachments/A comparison of back-endframeworks for web application d.pdf:application/pdf}
}


@proceedings{Majchrzak.2017,
 year = {2017},
 title = {WEBIST 2017: Proceedings of the 13th International Conference on Web Information Systems and Technologies : Porto, Portugal, April 25-27, 2017},
 address = {Set{\'u}bal},
 publisher = {{SCITEPRESS - Science and Technology Publications Lda}},
 isbn = {978-989-758-246-2    },
 editor = {Majchrzak, Tim A.},
 institution = {{Institute for Systems and Technologies of Information, Control and Communication}}
}


@incollection{Muhammed.2020,
 abstract = {Web applications and services are fundamental to designing smart infrastructure and cities. Developers often use various development technologies when developing web or cloud applications. One of such major technologies is web frameworks (e.g., Rails, Spring, Django,...},
 author = {Muhammed, Thaha and Mehmood, Rashid and Abozinadah, Ehab and Sharaf, Sanaa},
 title = {SelecWeb: A Software Tool for Automatic Selection of Web Frameworks},
 url = {https://link.springer.com/chapter/10.1007/978-3-030-13705-2_14#Sec9    },
 pages = {329--346},
 publisher = {{Springer, Cham}},
 booktitle = {Smart Infrastructure and Applications},
 year = {2020},
 doi = {10.1007/978-3-030-13705-2     {\textunderscore }14}
}


@article{Nawrocki.2021,
 abstract = {The methods used for developing applications for mobile devices have become an important field of research. In this article, we analyze the two most popular approaches, native and cross platform, and compare identical applications developed using various tools.},
 author = {Nawrocki, Piotr and Wrona, Krzysztof and Marczak, Mateusz and Sniezynski, Bartlomiej},
 year = {2021},
 title = {A Comparison of Native and Cross-Platform Frameworks for Mobile Applications},
 keywords = {Computer applications;Mobile applications;Mobile communication;Mobile handsets;Software tools},
 pages = {18--27},
 volume = {54},
 number = {3},
 issn = {0018-9162},
 journal = {Computer},
 doi = {10.1109/MC.2020.2983893       }
}


@article{Nawrocki.2021b,
 abstract = {The methods used for developing applications for mobile devices have become an important field of research. In this article, we analyze the two most popular approaches, native and cross platform, and compare identical applications developed using various tools.},
 author = {Nawrocki, Piotr and Wrona, Krzysztof and Marczak, Mateusz and Sniezynski, Bartlomiej},
 year = {2021},
 title = {A Comparison of Native and Cross-Platform Frameworks for Mobile Applications},
 keywords = {Computer applications;Mobile applications;Mobile communication;Mobile handsets;Software tools},
 pages = {18--27},
 volume = {54},
 number = {3},
 issn = {0018-9162},
 journal = {Computer},
 doi = {10.1109/MC.2020.2983893   }
}


@article{Neuhaus.2017,
 abstract = {Deciding on a JavaScript framework for your web application can be overwhelming. Angular and React are very popular these days, and there is an upstart which has been getting a lot of traction$\ldots$},
 author = {Neuhaus, Jens},
 year = {2017},
 title = {Angular vs. React vs. Vue: A 2017 comparison - pixelpassion - Medium},
 url = {https://medium.com/pixelpassion/angular-vs-react-vs-vue-a-2017-comparison-c5c52d620176},
 urldate = {6/19/2023},
 journal = {pixelpassion},
 file = {Angular vs React vs Vue A 2017 comparison - pixelpassion:Attachments/Angular vs React vs Vue A 2017 comparison - pixelpassion.pdf:application/pdf}
}


@article{Ohrt.2012,
 abstract = {Developers can use cross-platform mobile development tools to create smartphone apps that meet user expectations, but existing XMTs need improvement.},
 author = {Ohrt, Julian and Turau, Volker},
 year = {2012},
 title = {Cross-Platform Development Tools for Smartphone Applications},
 keywords = {Browsers;cross-platform mobile development tools;Graphical user interfaces;Java;mobile apps;Mobile communication;Runtime;Smart phones;smartphones;XMTs},
 pages = {72--79},
 volume = {45},
 number = {9},
 issn = {0018-9162},
 journal = {Computer},
 doi = {10.1109/MC.2012.121       }
}


@incollection{Oliveira.,
 author = {Oliveira, Wellington and Moraes, Bernardo and Castor, Fernando and Fernandes, Jo{\~a}o Paulo},
 title = {Analyzing the Resource Usage Overhead of Mobile App Development Frameworks},
 pages = {152--161},
 doi = {10.1145/3593434.3593487      }
}


@misc{Osadchuk.2020,
 abstract = {Want to develop an app? Have some doubts about what tech stack to choose? Check out our Flutter vs. Kotlin guide to understand what meets your needs best.},
 author = {Osadchuk, Serhii},
 year = {2020},
 title = {Flutter vs. Kotlin: Which One to Choose in 2023},
 url = {https://doit.software/blog/flutter-vs-kotlin-which-is-best-for-cross-platform-app-development#screen3},
 urldate = {3/6/2023}
}


@inproceedings{Rieger.2018,
 abstract = {While the term application is known for a long time, what we now refer to as mobile apps has facilitated task-oriented, interoperable software. The term was initially only used for smartphones and tablets, but desktop software now is also referred to as apps. More...},
 author = {Rieger, Christoph and Majchrzak, Tim A.},
 title = {A Taxonomy for App-Enabled Devices: Mastering the Mobile Device Jungle},
 url = {https://link.springer.com/chapter/10.1007/978-3-319-93527-0_10   },
 pages = {202--220},
 volume = {322},
 publisher = {{Springer, Cham}},
 year = {2018},
 doi = {10.1007/978-3-319-93527-0   {\textunderscore }10}
}


@article{Rieger.2019,
 abstract = {Mobile app development is hindered by device fragmentation and vendor-specific modifications. Boundaries between devices blur with PC-tablet hybrids on the one side and wearables on the other. Future apps need to support a host of app-enabled devices with differing capabilities, along with their software ecosystems. Prior work on cross-platform app development concerned concepts and prototypes, and compared approaches that target smartphones. To aid choosing an appropriate framework and to support the scientific assessment of approaches, an up-to-date comparison framework is needed. Extending work on a holistic, weighted set of assessment criteria, we propose what could become the definitive framework for evaluating cross-platform approaches. We have based it on sound abstract concepts that allow extensions. The weighting capabilities offer customisation to avoid the proverbial comparison of apples and oranges lurking in the variety of available frameworks. Moreover, it advises on multiple development situations based on a single assessment. In this article, we motivate and describe our evaluation criteria. We then present a study that assesses several frameworks and compares them to Web Apps and native development. Our findings suggest that cross-platform development has seen much progress but the challenges are ever growing. Therefore, additional support for app developers is warranted.},
 author = {Rieger, Christoph and Majchrzak, Tim A.},
 year = {2019},
 title = {Towards the definitive evaluation framework for cross-platform app development approaches},
 url = {https://www.sciencedirect.com/science/article/pii/S0164121219300743},
 keywords = {Cross-platform;Development framework;Mobile app;Mobile computing;Multi-platform},
 pages = {175--199},
 volume = {153},
 issn = {01641212},
 journal = {Journal of Systems and Software},
 doi = {10.1016/j.       jss.2019.04.001}
}


@inproceedings{Suri.12232022,
 author = {Suri, Bhawna and Taneja, Shweta and Bhanot, Isha and Sharma, Himanshi and Raj, Aanchal},
 title = {Cross-Platform Empirical Analysis of Mobile Application Development frameworks: Kotlin, React Native and Flutter},
 pages = {1--6},
 publisher = {ACM},
 isbn = {9781450399937       },
 booktitle = {Proceedings of the 4th International Conference on Information Management {\&} Machine Intelligence},
 year = {12232022},
 address = {New York, NY, USA},
 doi = {10.1145/3590837.3590897     }
}


@incollection{Gizas.,
 author = {Gizas, Andreas and Christodoulou, Sotiris and Papatheodorou, Theodore},
 title = {Comparative evaluation of javascript frameworks},
 pages = {513--514},
 doi = {10.1145/2187980.2188103      }
}


@book{GARRIGOS.2023,
 author = {GARRIGOS, IRENE},
 year = {2023},
 title = {WEB ENGINEERING: 23rd international conference, icwe 2023},
 address = {[S.l.]},
 publisher = {{SPRINGER INTERNATIONAL PU}},
 isbn = {303134443X      }
}


@misc{Below.2022,
 abstract = {Mit einer einfachen Desktop-App schauen wir uns die St{\"a}rken von Kotlin, Kotlin Multiplatform und der UI-Plattform Jetpack Compose an.},
 author = {von Below, Alexander and Harakal, Michal},
 year = {NaN},
 title = {Responsive-Multiplatform-HMI-Anwendungen mit Kotlin Multiplatform und Jetpack Compose},
 url = {https://entwickler.de/java/kotlin-multiplatform-jetpack},
 urldate = {3/7/2023}
}


@misc{Springer.2018,
 abstract = {Vue.js, Angular oder React? Im direkten Vergleich zu Angular und React l{\"a}sst sich gut zeigen, wann das JavaScript-Framework Vue die richtige Wahl ist.},
 author = {Springer, Sebastian},
 year = {2018},
 title = {JavaScript Frameworks im Vergleich: Vue vs. Angular vs. React},
 url = {https://entwickler.de/angular/to-dos-mit-vuejs},
 urldate = {6/26/2023}
}


@proceedings{.2013b,
 year = {2013},
 file = {A Comparative Analysis of Cross-platform Development App:Attachments/A Comparative Analysis of Cross-platform Development App.pdf:application/pdf}
}


@proceedings{.2013c,
 year = {2013},
 title = {2013 9th International Wireless Communications and Mobile Computing Conference (IWCMC)},
 isbn = {2376-6506}
}


@proceedings{.2014,
 year = {2014},
 publisher = {{Springer, Berlin, Heidelberg}},
 file = {Web Information Systems and Technologies:Attachments/Web Information Systems and Technologies.pdf:application/pdf}
}


@proceedings{.2018,
 year = {2018},
 publisher = {{Springer, Cham}},
 file = {Web Information Systems and Technologies:Attachments/Web Information Systems and Technologies.pdf:application/pdf}
}


@proceedings{.2018b,
 year = {2018},
 title = {2018 Zooming Innovation in Consumer Technologies Conference (ZINC)}
}


@proceedings{.2020,
 year = {2020},
 title = {2020 IEEE Conference on Games (CoG)},
 isbn = {2325-4289},
 file = {Cross-Platform Games in Kotlin:Attachments/Cross-Platform Games in Kotlin.pdf:application/pdf}
}


@book{.2020b,
 year = {2020},
 title = {Smart Infrastructure and Applications},
 publisher = {{Springer, Cham}},
 file = {Smart Infrastructure and Applications:Attachments/Smart Infrastructure and Applications.pdf:application/pdf}
}


@proceedings{.2021,
 year = {2021},
 title = {2021 16th International Conference on Engineering of Modern Electric Systems (EMES)}
}


@proceedings{.12232022,
 year = {12232022},
 title = {Proceedings of the 4th International Conference on Information Management {\&} Machine Intelligence},
 address = {New York, NY, USA},
 publisher = {ACM},
 isbn = {9781450399937                 },
 doi = {10.1145/3590837                   }
}


@misc{CGI.2023,
 abstract = {Founded in 1976, CGI is among the largest IT and business consulting services firms in the world. We are insights-driven and outcomes-based to help accelerate returns on your investments.},
 year = {5/2/2023},
 title = {IT and business consulting services},
 url = {https://www.cgi.com/en},
 urldate = {5/2/2023}
}


@misc{CGI.const.2023,
 abstract = {CGI's Constitution is a reflection of our Culture. The Constitution is made up of the common Dream, Vision, Mission and Values that drive us as we strive together to build a global IT and business consulting services leader. With frameworks and programs founded upon this Constitution, CGI's consultants and professionals have the opportunity to participate in the life and development of their company, which, in turn, results in client loyalty and shareholder growth.},
 year = {5/2/2023},
 title = {The CGI Constitution},
 url = {https://www.cgi.com/en/overview/constitution},
 urldate = {5/2/2023}
}


@misc{Angular.2023,
 year = {2023},
 author = {Angular},
 title = {Angular - Understanding templates},
 url = {https://angular.io/guide/template-overview},
 urldate = {6/26/2023}
}

@misc{Lighthouse.2016, 
url={https://developer.chrome.com/docs/lighthouse/overview/}, 
author = {Google},
journal={Chrome Developers}, 
year={2016}, 
}

@misc{W3C.2022, 
title = {Introduction to Web Accessibility}, 
year = {2022},
url = {https://www.w3.org/WAI/fundamentals/accessibility-intro/}, 
journal = {Web Accessibility Initiative (WAI)}, 
editor = {Lawton Henry, Shawn},
author = {W3C},
}
@misc{Kumar.2018, 
author = {Kumar, Ankit},
year = {2018},
url={https://dzone.com/articles/react-vs-angular-vs-vuejs-a-complete-comparison-gu}, 
journal={dzone.com} 
}

@article{Raible.2007,
 abstract = {I first came up with the idea to do a},
 year = {2007},
 author = {Raible, Matt},
 title = {Raible Designs | Comparing Web Frameworks: Time for a Change?},
 url = {https://raibledesigns.com/rd/entry/comparing_web_frameworks_time_for},
 urldate = {6/26/2023}
}

@inbook{Rieger.2018,
author = {Rieger, Christoph and Majchrzak, Tim A.},
year = {2018},
month = {06},
pages = {202-220},
title = {A Taxonomy for App-Enabled Devices: Mastering the Mobile Device Jungle},
isbn = {978-3-319-93526-3    },
doi = {10.1007/978-3-319-93527-0_10    }
}

@inproceedings{Rieger.2016,
author = {Rieger, Christoph and Majchrzak, Tim A.},
year = {2016},
month = {09},
pages = {18-39},
title = {Weighted Evaluation Framework for Cross-Platform App Development Approaches},
isbn = {978-3-319-46641-5    },
doi = {10.1007/978-3-319-46642-2_2    }
}

@Article{Wasilewski.2021,
AUTHOR = {Wasilewski, Kamil and Zabierowski, Wojciech},
TITLE = {A Comparison of Java, Flutter and Kotlin/Native Technologies for Sensor Data-Driven Applications},
JOURNAL = {Sensors},
VOLUME = {21},
YEAR = {2021},
NUMBER = {10},
ARTICLE-NUMBER = {3324},
URL = {https://www.mdpi.com/1424-8220/21/10/3324},
PubMedID = {34064776},
ISSN = {1424-8220},
ABSTRACT = {As a result of the continuous progress and fast-growing popularity of mobile technologies in recent years, the demand for mobile applications has increased rapidly. One of the most important decisions that its developers have to make is the choice of technology on which their application will be based. This article is devoted to the comparison of Java, Flutter, and Kotlin/Native technologies for applications based on processing and analyzing data from sensors. The main elements of the comparison are the efficiency and resource utilization of mobile applications for Android OS implemented in each of the aforementioned technologies.},
DOI = {10.3390/s21103324}
}

@INPROCEEDINGS{Putranto.2020,
  author={Putranto, Bambang Purnomosidi Dwi and Saptoto, Robertus and Jakaria, Ovandry Chandra and Andriyani, Widyastuti},
  booktitle={2020 3rd International Seminar on Research of Information Technology and Intelligent Systems (ISRITI)}, 
  title={A Comparative Study of Java and Kotlin for Android Mobile Application Development}, 
  year={2020},
  volume={},
  number={},
  pages={383-388},
  doi={10.1109/ISRITI51436.2020.9315483}
}


@misc{Jaworski.2021,
author = {Jaworski, Aleksander},
year = {2021},
title = {Kotlin as a Cross-Platform Programming Language for Android and the Web},
url = {https://akjaw.com/assets/blog/thesis-kotlin-multiplatform/Kotlin_Multiplatform.pdf},

}

@inproceedings{Suri.2023, 
author = {Suri, Bhawna and Taneja, Shweta and Bhanot, Isha and Sharma, Himanshi and Raj, Aanchal},
title = {Cross-Platform Empirical Analysis of Mobile Application Development Frameworks: Kotlin, React Native and Flutter},
year = {2023},
isbn = {9781450399937    },
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3590837.3590897      },
doi = {10.1145/3590837.3590897    },
abstract = {Mobile application development is currently seen as one of the most indispensable skills due to the recent boom in the population using smartphones and tablets. Due to the abundance and diversity of devices and platforms, developing applications for mobile devices is a complicated task involving multiple alternatives, technologies, and trade-offs. The development of applications in a cross-platform framework has become more prevalent in recent years. However, it is less clear which of the three major frame-works for android development, React Native, Flutter, and Kotlin is the most efficient in general comparisons.In this work, we have analyzed empirically the performance of three mobile application frameworks: Flutter, React-Native and Kotlin. Three tic-tac-toe games are designed using Flutter, React-Native and Kotlin, and their performance is compared on the basis of various parameters such as CPU usage, Memory usage, packages and their installations to understand the advantages and disadvantages of cross-platform and native mobile development. Our work also aims to assist developers in determining which framework is most suited to their requirements by comparing them in areas such as environment, development languages and ease of use. The results have indicated that Kotlin has a slight advantage over the two cross-platform technologies, Flutter and React Native. Memory usage of React-Native and Flutter were approximately 13.3% and 1.6% more than Kotlin respectively. Similarly, the application sizes of React-Native and Flutter are 98.06MB and 93.32 MB respectively, with Kotlin coming in last at 11.06 MB. In future, further investigation of the topics covered in this work is required to ensure and enhance the findings.},
booktitle = {Proceedings of the 4th International Conference on Information Management & Machine Intelligence},
articleno = {60},
numpages = {6},
location = {Jaipur, India},
series = {ICIMMI '22}
}

@inproceedings{Tripon.2021,
 abstract = {Web-based and mobile applications are increasingly used today in all areas of our life. In order to deliver software products as fast, as simple and economically possible, several cross-platform frameworks were created. The challenge is to choose the best framework that produces the desired solution and that integrates best with the existing systems and with higher user experience results. This paper describes and analyses the performance of two frameworks, Angular and Svelte, used for application development based on the implementation of a small applications. Results reveal that an important factor considered to choose the framework is the target device on which the application runs and also the complexity of the application.},
 author = {Tripon, Teodor-Dorin and {Adela Gabor}, Gianina and {Valentina Moisi}, Elisa},
 title = {Angular and Svelte Frameworks: a Comparative Analysis},
 keywords = {Angular;Complexity theory;framework;mobile application;Mobile applications;Performance evaluation;Software;Svelte;Testing;Tools;User experience;web-based application},
 pages = {1--4},
 booktitle = {2021 16th International Conference on Engineering of Modern Electric Systems (EMES)},
 year = {2021},
 doi = {10.1109/EMES52337.2021.9484119     }
}

@inproceedings{Diniz.2022,
  author={Diniz-Junior, Raimundo N.V. and Figueiredo, Caio César L. and De S.Russo, Gilson and Bahiense-Junior, Marcos Roberto G. and Arbex, Mateus V.L. and Dos Santos, Lanier M. and Da Rocha, Raimundo F. and Bezerra, Renan R. and Giuntini, Felipe T.},
  booktitle={2022 XVLIII Latin American Computer Conference (CLEI)}, 
  title={Evaluating the performance of web rendering technologies based on JavaScript: Angular, React, and Vue}, 
  year={2022},
  pages={1-9},
  doi={10.1109/CLEI56649.2022.9959901 }
}


@misc{Mozilla.2023,
 abstract = {Web performance is all about making websites fast, including making slow processes seem fast. Does the site load quickly, allow the user to start interacting with it quickly, and offer reassuring feedback if something is taking time to load (e.g. a loading spinner)? Are scrolling and animations smooth? This article provides a brief introduction to objective, measurable web performance*, looking at what technologies, techniques, and tools are involved in web optimization.},
 year = {2023},
 author = {Mozilla},
 title = {What is web performance? - Learn web development | MDN},
 url = {https://developer.mozilla.org/en-US/docs/Learn/Performance/What_is_web_performance},
 urldate = {6/26/2023}
}


@article{AndreasBirnHansen.2019,
 abstract = {Patterns are found in the reported perceived issues which match both older and newer research, thus rendering the findings a point of departure for further endevours. The purpose of this study is to report on the industry's perspectives and opinions on cross-platform mobile development, with an emphasis on the popularity, adoption, and arising issues related to the use of technical development frameworks and tools. We designed and conducted an online survey questionnaire, for which 101 participants were recruited from various developer-oriented online forums and websites. A total of five questions are reported in this study, of which two employed a Likert scale instrument, while three were based on multiple choice. In terms of technical frameworks, we find that PhoneGap, the Ionic Framework, and React Native were the most popular in use, both in hobby projects and in professional settings. The participants report an awareness of trade-offs when embracing cross-platform technologies and consider penalties in performance and user experience to be expected. This is also in line with what is reported in academic research. We find patterns in the reported perceived issues which match both older and newer research, thus rendering the findings a point of departure for further endevours.},
 author = {{Andreas Bi{\o}rn-Hansen} and {Tor-Morten Gr{\o}nli} and {G. Ghinea} and {S. Alouneh}},
 year = {2019},
 title = {An Empirical Study of Cross-Platform Mobile Development in Industry},
 url = {https://www.semanticscholar.org/paper/An-Empirical-Study-of-Cross-Platform-Mobile-in-Bi%C3%B8rn-Hansen-Gr%C3%B8nli/ef327921173c8a5f2d04bdf4821ce8111ceb1466},
 journal = {Wirel. Commun. Mob. Comput.},
 file = {An Empirical Study of Cross-Platform Mobile Development:Attachments/An Empirical Study of Cross-Platform Mobile Development.pdf:application/pdf}
}


@article{ANNAKARINEvert.2019,
 abstract = {The results indicate that it is possible to write less code if making use of the Kotlin Multiplatform feature, however, the results also indicate an increased build time with KotlinMultiplatform, for both Android and iOS, and an increased startup time for Android. The objective of this master's thesis has been to evaluate the Kotlin Multiplatform feature for developing cross-platform mobile applications for Android and iOS. This has been done in comparison to natively developed applications for the two platforms. The method of evaluation has been to develop a sample application natively for Android and iOS, respectively. The same sample application has then been developed using the Kotlin Multiplatform feature. Finally, the multiplatform Android application has been compared to the natively developed Android application, and the multiplatform iOS application has been compared to the natively developed iOS application. The evaluation has focused on measuring the startup time of the applications, as well as the application size of the installed sample applications, comparing the native ones to the multiplatform ones. An attempt has also been made to try to determine if there can be any productivity gains in using the Kotlin Multiplatform feature instead of doing the development natively for each of the studied platforms. For productivity, the evaluation has included measuring number of lines of code, and build time (compilation time) for the applications. The results indicate that it is possible to write less code if making use of the Kotlin Multiplatform feature. However, the results also indicate an increased build time with Kotlin Multiplatform, for both Android and iOS, and an increased startup time for Android. No indication of an increased startup time for the multiplatform iOS application could be found. As for the application sizes, the results show an increased size for the multiplatform applications.},
 author = {{ANNA-KARIN Evert}},
 year = {2019},
 title = {Cross-platform Smartphone Application Development with Kotlin Multiplatform Possible Impacts on Development Productivity, Application Size and Startup Time},
 url = {https://www.semanticscholar.org/paper/Cross-platform-Smartphone-Application-Development-Evert/70589c2b1b6e3f5600452c1acf65470f95a6a998}
}


@article{Baida.2020,
 abstract = {The aim of the paper is to compare the performance of popular JavaScript frameworks Angular and Vue.js in the context of game development. The comparative criteria are as follows: time of data exchanging with server and rendering of various application components, memory consumption during refreshing the current game information and restoring the user to the current game, browser load level and size of the final application files. The test results show that the Vue.js framework is more efficient.},
 author = {Baida, Roman and Andriienko, Maksym and Plechawska-W{\'o}jcik, Ma{\l}gorzata},
 year = {2020},
 title = {Perfomance analysis of frameworks Angular and Vue.js},
 url = {https://ph.pollub.pl/index.php/jcsi/article/view/1577},
 keywords = {Angular;browser game;performance analysis;Vue},
 pages = {59--64},
 volume = {14},
 journal = {Journal of Computer Sciences Institute},
 doi = {10.35784/jcsi.1577},
 file = {Perfomance analysis of frameworks Angular and Vuejs:Attachments/Perfomance analysis of frameworks Angular and Vuejs.pdf:application/pdf}
}


@article{Banu.2023,
 abstract = {In this article on website testing tools, you will have at least a fundamental knowledge of the most widely used website testing tools with their prominent features.},
 author = {Banu, Shakura},
 year = {2023},
 title = {37 Best Website Testing Tools For 2023 | LambdaTest},
 url = {https://www.lambdatest.com/blog/website-testing-tools/},
 urldate = {6/26/2023},
 journal = {LambdaTest},
 file = {37 Best Website Testing Tools For 2023  LambdaTest:Attachments/37 Best Website Testing Tools For 2023  LambdaTest.pdf:application/pdf}
}


@article{Bielak.2022,
 author = {Bielak, Konrad and Borek, Bart{\l}omiej and Plechawska-W{\'o}jcik, Ma{\l}gorzata},
 year = {2022},
 title = {Web application performance analysis using Angular, React and Vue.js frameworks},
 pages = {77--83},
 volume = {23},
 issn = {2544-0764},
 journal = {Journal of Computer Sciences Institute},
 doi = {10.35784/jcsi.2827},
 file = {Web application performance analysis using Angular React:Attachments/Web application performance analysis using Angular React.pdf:application/pdf}
}


@article{BirnHansen.2020,
 abstract = {The heterogeneity of the leading mobile platforms in terms of user interfaces, user experience, programming language, and ecosystem have made cross-platform development frameworks popular. These aid the creation of mobile applications -- apps -- that can be executed across the target platforms (typically Android and iOS) with minimal to no platform-specific code. Due to the cost- and time-saving possibilities introduced through adopting such a framework, researchers and practitioners alike have taken an interest in the underlying technologies. Examining the body of knowledge, we, nonetheless, frequently encounter discussions on the drawbacks of these frameworks, especially with regard to the performance of the apps they generate. Motivated by the ongoing discourse and a lack of empirical evidence, we scrutinised the essential piece of the cross-platform frameworks: the bridge enabling cross-platform code to communicate with the underlying operating system and device hardware APIs. The study we present in the article benchmarks and measures the performance of this bridge to reveal its associated overhead in Android apps. The development of the artifacts for this experiment was conducted using five cross-platform development frameworks to generate Android apps, in addition to a baseline native Android app implementation. Our results indicate that -- for Android apps -- the use of cross-platform frameworks for the development of mobile apps may lead to decreased performance compared to the native development approach. Nevertheless, certain cross-platform frameworks can perform equally well or even better than native on certain metrics which highlights the importance of well-defined technical requirements and specifications for deliberate selection of a cross-platform framework or overall development approach.},
 author = {Bi{\o}rn-Hansen, Andreas and Rieger, Christoph and Gr{\o}nli, Tor-Morten and Majchrzak, Tim A. and Ghinea, Gheorghita},
 year = {2020},
 title = {An empirical investigation of performance overhead in cross-platform mobile development frameworks},
 url = {https://link.springer.com/article/10.1007/s10664-020-09827-6#Sec5   },
 keywords = {Compilers;Interpreters;Programming Languages;Software Engineering/Programming and Operating Systems},
 pages = {2997--3040},
 volume = {25},
 number = {4},
 issn = {1382-3256},
 journal = {Empirical Software Engineering},
 doi = {10.1007/s10664-020-09827-6    },
 file = {An empirical investigation of performance overhead in cr:Attachments/An empirical investigation of performance overhead in cr.pdf:application/pdf}
}


@misc{Borrelli.2021,
 abstract = {Compare the performance of Angular, React, and Vue and why they're still among the most important JavaScript frameworks of the last decade.},
 author = {Borrelli, Piero},
 year = {2021},
 title = {Angular vs. React vs. Vue.js: Comparing performance - LogRocket Blog},
 url = {https://blog.logrocket.com/angular-vs-react-vs-vue-js-comparing-performance/},
 urldate = {6/26/2023}
}


@incollection{ChristophRieger.,
 abstract = {Digital Library},
 author = {{Christoph Rieger} and {Tim A. Majchrzak}},
 title = {Conquering the Mobile Device Jungle: Towards a Taxonomy for App-enabled Devices},
 url = {https://www.scitepress.org/Link.aspx?doi=10.5220/0006353003320339},
 urldate = {6/1/2017},
 pages = {332--339}
}


@incollection{Corbalan.,
 author = {Corbalan, Leonardo and Fernandez, Juan and Cuiti{\~n}o, Alfonso and Delia, Lisandro and C{\'a}seres, Germ{\'a}n and Thomas, Pablo and Pesado, Patricia},
 title = {Development frameworks for mobile devices},
 pages = {191--201},
 doi = {10.1145/3197231.3197242    }
}


@incollection{Dalmasso.,
 abstract = {Mobile application development is becoming more challenging with diverse platforms and their software development kits. In order to reduce the cost of development and reach out to maximum users across several platforms, developers are migrating to cross platform application development tools. In this paper, we provide several decision criteria beyond the portability concerns for choosing suitable cross platform tool for application development. The desirable requirements in a cross platform framework are identified. A general architecture for cross platform application development is discussed. Then a survey of several write once run anywhere tools (PhoneGap, Titanium, Sencha Touch) are provided along with a classification and comparison among the tools. To examine the performance in terms of CPU, memory usage, power consumption, Android test applications are developed using such tools. It is found that PhoneGap consumes less memory, CPU and power since it does not included dedicated UI components. Finally the paper summarizes the contributions and concludes with some future directions.},
 author = {Dalmasso, Isabelle and Datta, Soumya Kanti and Bonnet, Christian and Nikaein, Navid},
 title = {Survey, comparison and evaluation of cross platform mobile application development tools},
 keywords = {Android;Cascading style sheets;cross platform tools;Documentation;HTML;Mobile communication;mobile development;PhoneGap;Power demand;Smart phones;Titanium},
 pages = {323--328},
 doi = {10.1109/IWCMC.2013.6583580}
}


@article{DelSalasZarate.2015,
 abstract = {Choosing the Web framework that best fits the requirements is not an easy task for developers. Several frameworks now exist to develop Web applications, such as Struts, JSF, Ruby on Rails, Grails, CakePHP, Django, and Catalyst. However, Lift is a relatively new framework that emerged in 2007 for the Scala programming language and which promises a great number of advantages and additional features. Companies such as Siemens{\copyright} and IBM{\circledR}, as well as social networks such as Twitter{\circledR} and Foursquare{\circledR}, have now begun to develop their applications by using Scala and Lift. Best practices are activities, technical or important issues identified by users in a specific context, and which have rendered excellent service and are expected to achieve similar results in similar situations. Each framework has its own best practices whose aim is to facilitate the development of Web applications. However, there is no current comparative analysis that identifies the best practices for Web frameworks. Thus, as its salient contribution, this paper identifies a set of best practices for Web frameworks. Afterwards, these best practices were analyzed and discussed in terms of developing Lift-based Web applications. The identification of these best practices would allow developers to construct more interactive and efficient Lift-based Web applications, integrating features of Web 2.0 technologies with less effort and exploiting the frameworks' benefits. In addition, this paper contains a comparative analysis with Web frameworks such as JSF, Struts, CakePHP, Ruby on Rails, Lift, Django, and Catalyst. Finally, as proof of concept, a set of Lift-based Web applications were developed for this paper by applying best practices such as actors, lazy loading, Comet support, SiteMap, Wiring, HyperText Markup Language, version 5 (HTML5) support, and parallel rendering.},
 author = {{Del Salas-Z{\'a}rate}, Mar{\'i}a Pilar and Alor-Hern{\'a}ndez, Giner and Valencia-Garc{\'i}a, Rafael and Rodr{\'i}guez-Mazahua, Lisbeth and Rodr{\'i}guez-Gonz{\'a}lez, Alejandro and {L{\'o}pez Cuadrado}, Jos{\'e} Luis},
 year = {2015},
 title = {Analyzing best practices on Web development frameworks: The lift approach},
 url = {https://www.sciencedirect.com/science/article/pii/S0167642314005735},
 keywords = {Best practices;Lift;Scala;Web frameworks},
 pages = {1--19},
 volume = {102},
 issn = {01676423},
 journal = {Science of Computer Programming},
 doi = {10.1016/j.   scico.2014.12.004}
}


@inproceedings{Delcev.2018,
 abstract = {With the increasing popularity of the web, some new web technologies emerged and introduced dynamics to web applications, in comparison to HTML, as a static programming language. JavaScript is the language that provided a dynamic web site which actively communicates with users. JavaScript is used in today's web applications as a client script language and on the server side. The JavaScript language supports the Model View Controller (MVC) architecture that maintains a readable code and clearly separates parts of the program code. The topic of this research is to compare the popular JavaScript frameworks: AngularJS, Ember, Knockout, Backbone. All four frameworks are based on MVC or similar architecture. In this paper, the advantages and disadvantages of each framework, the impact on application speed, the ways of testing such JS applications and ways to improve code security are presented.},
 author = {Delcev, Sanja and Draskovic, Drazen},
 title = {Modern JavaScript frameworks: A Survey Study},
 keywords = {AngularJS;Backbone;Browsers;client server applications;Computer architecture;Data models;Ember;javascript;Knockout;Libraries;MVC architecture;Security;Servers;Testing},
 pages = {106--109},
 booktitle = {2018 Zooming Innovation in Consumer Technologies Conference (ZINC)},
 year = {2018},
 doi = {10.1109/ZINC.2018.8448444     }
}


@article{ElKassas.2017,
 abstract = {The developers use the cross-platform mobile development solutions to develop the mobile application once and run it on many platforms. Many of these cross-platform solutions are still under research and development. Also, these solutions are based on different approaches such as Cross-Compilation approach, Virtual Machine approach, and Web-Based approach. There are many survey papers about the cross-platform mobile development solutions but they do not include the most recent approaches, including Component-Based approach, Cloud-Based approach, and Merged approach. The main aim of this paper is helping the researchers to know the most recent approaches and the open research issues. This paper surveys the existing cross-platform mobile development approaches and attempts to provide a global view: it thoroughly introduces a comprehensive categorization to the cross-platform approaches, defines the pros and cons of each approach, explains sample solutions per approach, compares the cross-platform mobile development solutions, and ends with the open research areas.},
 author = {El-Kassas, Wafaa S. and Abdullah, Bassem A. and Yousef, Ahmed H. and Wahba, Ayman M.},
 year = {2017},
 title = {Taxonomy of Cross-Platform Mobile Applications Development Approaches},
 url = {https://www.sciencedirect.com/science/article/pii/S2090447915001276},
 keywords = {Cloud computing;Compilation approach;Component-Based approach;Cross-platform mobile development;Interpretation approach;Model-Driven Engineering},
 pages = {163--190},
 volume = {8},
 number = {2},
 issn = {20904479},
 journal = {Ain Shams Engineering Journal},
 doi = {10.1016/j.    asej.2015.08.004}
}


@misc{Vue.2023,
 abstract = {Vue.js - The Progressive JavaScript Framework},
 year = {2023},
 author = {Vue},
 title = {Comparison with Other Frameworks --- Vue.js},
 url = {https://v2.vuejs.org/v2/guide/comparison.html?redirect=true},
 urldate = {6/26/2023}
}


@inproceedings{Xanthopoulos.2013,
 abstract = {PDF | Nowadays, native mobile applications (mobile apps) are targeted at specific mobile platforms. This phenomenon imposes severe constraints, such as... | Find, read and cite all the research you need on ResearchGate},
 author = {Xanthopoulos, Spyros and Xinogalos, Stelios},
 title = {A comparative analysis of cross-platform development approaches for mobile applications},
 url = {https://www.researchgate.net/publication/258010031_A_Comparative_Analysis_of_Cross-platform_Development_Approaches_for_Mobile_Applications},
 pages = {213--220},
 year = {2013},
 doi = {10.1145/2490257.2490292    }
}


